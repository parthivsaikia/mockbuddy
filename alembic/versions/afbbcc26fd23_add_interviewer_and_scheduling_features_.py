"""add_interviewer_and_scheduling_features_and_update_refreshtoken

Revision ID: afbbcc26fd23
Revises: ad00a76edb1a
Create Date: 2025-06-14 00:35:49.985403

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'afbbcc26fd23'
down_revision: Union[str, None] = 'ad00a76edb1a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interviewers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('profile_headline', sa.String(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('linkedin_url', sa.String(), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('areas_of_expertise', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interviewers_email'), 'interviewers', ['email'], unique=True)
    op.create_index(op.f('ix_interviewers_id'), 'interviewers', ['id'], unique=False)
    op.create_table('availability_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('interviewer_id', sa.Integer(), nullable=False),
    sa.Column('slot_date_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_time_utc', sa.Time(timezone=True), nullable=False),
    sa.Column('end_time_utc', sa.Time(timezone=True), nullable=False),
    sa.Column('is_booked', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['interviewer_id'], ['interviewers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_availability_slots_id'), 'availability_slots', ['id'], unique=False)
    op.create_index(op.f('ix_availability_slots_is_booked'), 'availability_slots', ['is_booked'], unique=False)
    op.create_table('scheduled_interviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interviewer_id', sa.Integer(), nullable=True),
    sa.Column('availability_slot_id', sa.Integer(), nullable=True),
    sa.Column('interview_datetime_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING_CONFIRMATION', 'CONFIRMED', 'COMPLETED', 'CANCELLED_BY_USER', 'CANCELLED_BY_INTERVIEWER', name='interviewstatus'), nullable=False),
    sa.Column('meeting_link', sa.String(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('interviewer_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['availability_slot_id'], ['availability_slots.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['interviewer_id'], ['interviewers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('availability_slot_id')
    )
    op.create_index(op.f('ix_scheduled_interviews_id'), 'scheduled_interviews', ['id'], unique=False)
    op.create_index(op.f('ix_scheduled_interviews_interview_datetime_utc'), 'scheduled_interviews', ['interview_datetime_utc'], unique=False)
    op.create_index(op.f('ix_scheduled_interviews_interviewer_id'), 'scheduled_interviews', ['interviewer_id'], unique=False)
    op.create_index(op.f('ix_scheduled_interviews_status'), 'scheduled_interviews', ['status'], unique=False)
    op.create_index(op.f('ix_scheduled_interviews_user_id'), 'scheduled_interviews', ['user_id'], unique=False)
    op.drop_constraint(op.f('core_evaluations_user_id_fkey'), 'core_evaluations', type_='foreignkey')
    op.create_foreign_key(None, 'core_evaluations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('dsa_evaluations', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.drop_constraint(op.f('dsa_evaluations_user_id_fkey'), 'dsa_evaluations', type_='foreignkey')
    op.create_foreign_key(None, 'dsa_evaluations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('refresh_tokens', sa.Column('interviewer_id', sa.Integer(), nullable=True))
    op.alter_column('refresh_tokens', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('refresh_tokens_token_key'), 'refresh_tokens', type_='unique')
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=True)
    op.drop_constraint(op.f('refresh_tokens_user_id_fkey'), 'refresh_tokens', type_='foreignkey')
    op.create_foreign_key(None, 'refresh_tokens', 'interviewers', ['interviewer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'refresh_tokens', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('test_cases', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.drop_constraint(op.f('test_cases_question_hash_key'), 'test_cases', type_='unique')
    op.create_index(op.f('ix_test_cases_company'), 'test_cases', ['company'], unique=False)
    op.create_index(op.f('ix_test_cases_question_hash'), 'test_cases', ['question_hash'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_cases_question_hash'), table_name='test_cases')
    op.drop_index(op.f('ix_test_cases_company'), table_name='test_cases')
    op.create_unique_constraint(op.f('test_cases_question_hash_key'), 'test_cases', ['question_hash'])
    op.drop_column('test_cases', 'updated_at')
    op.drop_constraint(None, 'refresh_tokens', type_='foreignkey')
    op.drop_constraint(None, 'refresh_tokens', type_='foreignkey')
    op.create_foreign_key(op.f('refresh_tokens_user_id_fkey'), 'refresh_tokens', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.create_unique_constraint(op.f('refresh_tokens_token_key'), 'refresh_tokens', ['token'])
    op.alter_column('refresh_tokens', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('refresh_tokens', 'interviewer_id')
    op.drop_constraint(None, 'dsa_evaluations', type_='foreignkey')
    op.create_foreign_key(op.f('dsa_evaluations_user_id_fkey'), 'dsa_evaluations', 'users', ['user_id'], ['id'])
    op.drop_column('dsa_evaluations', 'created_at')
    op.drop_constraint(None, 'core_evaluations', type_='foreignkey')
    op.create_foreign_key(op.f('core_evaluations_user_id_fkey'), 'core_evaluations', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_scheduled_interviews_user_id'), table_name='scheduled_interviews')
    op.drop_index(op.f('ix_scheduled_interviews_status'), table_name='scheduled_interviews')
    op.drop_index(op.f('ix_scheduled_interviews_interviewer_id'), table_name='scheduled_interviews')
    op.drop_index(op.f('ix_scheduled_interviews_interview_datetime_utc'), table_name='scheduled_interviews')
    op.drop_index(op.f('ix_scheduled_interviews_id'), table_name='scheduled_interviews')
    op.drop_table('scheduled_interviews')
    op.drop_index(op.f('ix_availability_slots_is_booked'), table_name='availability_slots')
    op.drop_index(op.f('ix_availability_slots_id'), table_name='availability_slots')
    op.drop_table('availability_slots')
    op.drop_index(op.f('ix_interviewers_id'), table_name='interviewers')
    op.drop_index(op.f('ix_interviewers_email'), table_name='interviewers')
    op.drop_table('interviewers')
    # ### end Alembic commands ###
