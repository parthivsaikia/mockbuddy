problem id,question title,question text,topic tagged text,difficulty level,hints,similar questions id,similar questions text
1358,1358. Number of Substrings Containing All Three Characters,"Given a string s consisting only of characters a, b and c.
Return the number of substrings containing at least one occurrence of all these characters a, b and c.
 
Example 1:
Input: s = ""abcabc""
Output: 10
Explanation: The substrings containing at least one occurrence of the characters a, b and c are ""abc"", ""abca"", ""abcab"", ""abcabc"", ""bca"", ""bcab"", ""bcabc"", ""cab"", ""cabc"" and ""abc"" (again). 

Example 2:
Input: s = ""aaacb""
Output: 3
Explanation: The substrings containing at least one occurrence of the characters a, b and c are ""aaacb"", ""aacb"" and ""acb"". 

Example 3:
Input: s = ""abc""
Output: 1

 
Constraints:

3 <= s.length <= 5 x 10^4
s only consists of a, b or c characters.

","Math,Two Pointers,Binary Search,Interactive",Medium,"Loop over 1 ≤ x,y ≤ 1000 and check if f(x,y) == z.",,
1122,1122. Relative Sort Array,"Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.
Sort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2. Elements that do not appear in arr2 should be placed at the end of arr1 in ascending order.
 
Example 1:
Input: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]
Output: [2,2,2,1,4,3,3,9,6,7,19]

Example 2:
Input: arr1 = [28,6,22,8,44,17], arr2 = [22,28,8,6]
Output: [22,28,8,6,17,44]

 
Constraints:

1 <= arr1.length, arr2.length <= 1000
0 <= arr1[i], arr2[i] <= 1000
All the elements of arr2 are distinct.
Each arr2[i] is in arr1.

","String,Binary Search,Sliding Window,Rolling Hash,Suffix Array,Hash Function",Hard,"Binary search for the length of the answer.  (If there's an answer of length 10, then there are answers of length 9, 8, 7, ...) To check whether an answer of length K exists, we can use Rabin-Karp 's algorithm.",,
1262,1262. Greatest Sum Divisible by Three,"Given an integer array nums, return the maximum possible sum of elements of the array such that it is divisible by three.
 
Example 1:
Input: nums = [3,6,5,1,8]
Output: 18
Explanation: Pick numbers 3, 6, 1 and 8 their sum is 18 (maximum sum divisible by 3).
Example 2:
Input: nums = [4]
Output: 0
Explanation: Since 4 is not divisible by 3, do not pick any number.

Example 3:
Input: nums = [1,2,3,4,4]
Output: 12
Explanation: Pick numbers 1, 3, 4 and 4 their sum is 12 (maximum sum divisible by 3).

 
Constraints:

1 <= nums.length <= 4 * 104
1 <= nums[i] <= 104

","Array,Binary Search,Design,Binary Indexed Tree,Segment Tree",Hard,"What's special about a majority element ? A majority element appears more than half the length of the array number of times. If we tried a random index of the array, what's the probability that this index has a majority element ? It's more than 50% if that array has a majority element. Try a random index for a proper number of times so that the probability of not finding the answer tends to zero.",,
